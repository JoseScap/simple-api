name: EC2 Deployment

on:
  workflow_dispatch:
    inputs:
      ssh_host:
        description: 'The SSH host to deploy to'
        required: true
      ssh_user:
        description: 'The SSH user to deploy to'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ inputs.ssh_host }}
          username: ${{ inputs.ssh_user }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Deploying to EC2"
            # Crear directorio si no existe y cambiar permisos
            sudo mkdir -p /var/www
            sudo chown -R $USER:$USER /var/www
            
            cd /var/www
            
            # Clonar o actualizar el repositorio
            if [ -d "simple-api" ]; then
              cd simple-api
              git pull origin main
            else
              git clone https://github.com/${{ github.repository }}.git simple-api
              cd simple-api
            fi

            # Generar .env file
            cp env.example .env

            # Editar .env file con las variables de entorno
            sed -i "s/DB_HOST=.*/DB_HOST=${{ secrets.DB_HOST }}/" .env
            sed -i "s/DB_PORT=.*/DB_PORT=${{ secrets.DB_PORT }}/" .env
            sed -i "s/DB_NAME=.*/DB_NAME=${{ secrets.DB_NAME }}/" .env
            sed -i "s/DB_USER=.*/DB_USER=${{ secrets.DB_USER }}/" .env
            sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/" .env
            sed -i "s/PORT=.*/PORT=${{ secrets.PORT }}/" .env
            
            # Instalar dependencias
            npm install

            # Instalar PM2 globalmente si no está instalado
            if ! command -v pm2 &> /dev/null; then
              sudo npm install -g pm2
            fi

            # Reiniciar la aplicación con PM2
            pm2 delete 0 || true
            pm2 start ecosystem.config.js